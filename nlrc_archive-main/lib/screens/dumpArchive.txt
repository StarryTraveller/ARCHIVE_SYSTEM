import 'package:flutter/material.dart';
import 'package:intl/intl.dart';
import 'package:nlrc_archive/data/themeData.dart';
import 'package:nlrc_archive/modals/sack_content.dart';
import 'package:nlrc_archive/widgets/text_field_widget.dart';

class ArchivePage extends StatefulWidget {
  @override
  State<ArchivePage> createState() => _ArchivePageState();
}

class _ArchivePageState extends State<ArchivePage> {
  final TextEditingController _sackId = TextEditingController();

  final today = DateFormat('EEEE, MMMM, dd, yyyy').format(DateTime.now());
  String nlrc = "National Labor Relations Commission";

  String? _selectedArbiter;

  final List<String> _arbiterChoices = ['Arbiter 1', 'Arbiter 2', 'Arbiter 3'];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.grey[300],
      body: Padding(
        padding: const EdgeInsets.all(10.0),
        child: Flex(
          direction: Axis.vertical,
          children: [
            Flexible(
              fit: FlexFit.loose,
              child: Card(
                color: const Color.fromARGB(255, 60, 45, 194),
                child: Padding(
                  padding:
                      const EdgeInsets.symmetric(vertical: 8, horizontal: 20),
                  child: SizedBox(
                    width: MediaQuery.sizeOf(context).width - 100,
                    height: 100,
                    child: Row(
                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                      mainAxisSize: MainAxisSize.max,
                      children: [
                        Column(
                          mainAxisAlignment: MainAxisAlignment.center,
                          crossAxisAlignment: CrossAxisAlignment.start,
                          children: [
                            Text(
                              "${today.toString()}",
                              style: const TextStyle(
                                fontSize: 14,
                                color: Colors.white,
                              ),
                              textAlign: TextAlign.start,
                            ),
                            const Text(
                              "ARCHIVE",
                              style: TextStyle(
                                fontSize: 42,
                                fontWeight: FontWeight.bold,
                                color: Colors.white,
                                height: 0.8,
                              ),
                              textAlign: TextAlign.start,
                            ),
                            Text(
                              "${nlrc.toUpperCase()}",
                              style: const TextStyle(
                                color: Colors.white,
                                fontSize: 14,
                              ),
                            ),
                          ],
                        ),
                        Image.asset(
                          'assets/images/NLRC-WHITE.png',
                          fit: BoxFit.scaleDown,
                          width: 150,
                          height: 150,
                        ),
                      ],
                    ),
                  ),
                ),
              ),
            ),
            Flexible(
              fit: FlexFit.tight,
              child: Flex(
                direction: Axis.horizontal,
                crossAxisAlignment: CrossAxisAlignment.stretch,
                mainAxisAlignment: MainAxisAlignment.center,
                mainAxisSize: MainAxisSize.max,
                children: [
                  Flexible(
                    fit: FlexFit.tight,
                    flex: 1,
                    child: Padding(
                      padding: const EdgeInsets.all(10.0),
                      child: Card(
                        child: Padding(
                          padding: const EdgeInsets.all(20.0),
                          child: Column(
                            children: [
                              Text(
                                'Arbiters',
                                style: TextStyle(
                                  fontSize: 18,
                                  fontWeight: FontWeight.bold,
                                ),
                              ),
                            ],
                          ),
                        ),
                      ),
                    ),
                  ),
                  Flexible(
                    flex: 2,
                    fit: FlexFit.tight,
                    child: Padding(
                      padding: const EdgeInsets.all(10.0),
                      child: Column(
                        mainAxisSize: MainAxisSize.max,
                        children: [
                          Flexible(
                            child: Card(
                              child: Padding(
                                padding: const EdgeInsets.all(15.0),
                                child: Stack(
                                  children: [
                                    Column(
                                      mainAxisSize: MainAxisSize.max,
                                      children: [
                                        Text(
                                          'Archive Document',
                                          style: TextStyle(
                                            fontSize: 18,
                                            fontWeight: FontWeight.bold,
                                          ),
                                        ),
                                        SizedBox(
                                          height: 20,
                                        ),
                                        Container(
                                          width:
                                              MediaQuery.sizeOf(context).width /
                                                      2 -
                                                  100,
                                          child: ListView(
                                            shrinkWrap: true,
                                            children: [
                                              ListTile(
                                                title: Text(
                                                  'Sack 1 example',
                                                  style:
                                                      TextStyle(fontSize: 16),
                                                ),
                                                trailing: Row(
                                                  mainAxisSize:
                                                      MainAxisSize.min,
                                                  children: [
                                                    IconButton(
                                                      icon: Icon(Icons.delete,
                                                          color: Colors.red),
                                                      onPressed: () {
                                                        print('Delete Sack 1');
                                                      },
                                                    ),
                                                    IconButton(
                                                      icon: Icon(Icons.send,
                                                          color: Colors.green),
                                                      onPressed: () {
                                                        print('Submit Sack 1');
                                                      },
                                                    ),
                                                  ],
                                                ),
                                                onTap: () => showDialog(
                                                    context: context,
                                                    builder: ((context) {
                                                      return SackContent();
                                                    })),
                                              ),
                                              Divider(),
                                              ListTile(
                                                title: Text(
                                                  'Sack 2 example',
                                                  style:
                                                      TextStyle(fontSize: 16),
                                                ),
                                                trailing: Row(
                                                  mainAxisSize:
                                                      MainAxisSize.min,
                                                  children: [
                                                    IconButton(
                                                      icon: Icon(Icons.delete,
                                                          color: Colors.red),
                                                      onPressed: () {
                                                        print('Delete Sack 2');
                                                      },
                                                    ),
                                                    IconButton(
                                                      icon: Icon(Icons.send,
                                                          color: Colors.green),
                                                      onPressed: () {
                                                        print('Submit Sack 2');
                                                      },
                                                    ),
                                                  ],
                                                ),
                                                onTap: () => showDialog(
                                                    context: context,
                                                    builder: ((context) {
                                                      return SackContent();
                                                    })),
                                              ),
                                            ],
                                          ),
                                        )
                                      ],
                                    ),
                                    Positioned(
                                      top: 0,
                                      right: 0,
                                      child: ElevatedButton(
                                        style: ElevatedButton.styleFrom(
                                          backgroundColor: Colors.greenAccent,
                                        ),
                                        onPressed: () => showDialog(
                                            context: context,
                                            builder: ((context) {
                                              return AlertDialog(
                                                title: Text('Create Sack'),
                                                content: Column(
                                                  mainAxisSize:
                                                      MainAxisSize.min,
                                                  children: [
                                                    TextFieldWidget(
                                                        controller: _sackId,
                                                        labelText:
                                                            'Enter Sack ID'),
                                                    SizedBox(
                                                      height: 20,
                                                    ),
                                                    DropdownButtonFormField<
                                                        String>(
                                                      value: _selectedArbiter,
                                                      decoration:
                                                          InputDecoration(
                                                        labelText: 'Arbiter',
                                                        border:
                                                            OutlineInputBorder(),
                                                      ),
                                                      items: _arbiterChoices
                                                          .map((choice) {
                                                        return DropdownMenuItem<
                                                            String>(
                                                          value: choice,
                                                          child: Text(choice),
                                                        );
                                                      }).toList(),
                                                      onChanged: (value) {
                                                        setState(() {
                                                          _selectedArbiter =
                                                              value;
                                                        });
                                                      },
                                                      validator: (value) {
                                                        if (value == null ||
                                                            value.isEmpty) {
                                                          return 'Please select an arbiter';
                                                        }
                                                        return null;
                                                      },
                                                    ),
                                                  ],
                                                ),
                                                actions: [
                                                  ElevatedButton(
                                                    onPressed: () =>
                                                        Navigator.pop(context),
                                                    child: Text('Close'),
                                                  ),
                                                  ElevatedButton(
                                                    onPressed: () =>
                                                        Navigator.pop(context),
                                                    child: Text('Add'),
                                                  ),
                                                ],
                                              );
                                            })),
                                        child: Text(
                                          'Add Sack',
                                          style: TextStyle(
                                            fontWeight: FontWeight.bold,
                                            color: Colors.black,
                                          ),
                                        ),
                                      ),
                                    ),
                                  ],
                                ),
                              ),
                            ),
                          )
                        ],
                      ),
                    ),
                  ),
                  Flexible(
                    fit: FlexFit.tight,
                    flex: 0,
                    child: Padding(
                      padding: const EdgeInsets.all(10.0),
                      child: Column(
                        mainAxisSize: MainAxisSize.max,
                        children: [
                          Card(
                            child: Padding(
                              padding: const EdgeInsets.all(50.0),
                              child: Text('Pending\napproval'),
                            ),
                          ),
                          Card(
                            child: Padding(
                              padding: const EdgeInsets.all(50.0),
                              child: Text('Request'),
                            ),
                          ),
                        ],
                      ),
                    ),
                  ),
                ],
              ),
            ),
          ],
        ),
      ),
    );
  }
}